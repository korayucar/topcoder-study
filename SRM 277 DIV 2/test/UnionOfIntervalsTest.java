import org.junit.Test;
import static org.junit.Assert.*;

public class UnionOfIntervalsTest {
	
	@Test
	public void test0() {
		int[] lowerBound = new int[] { 1, 5 };
		int[] upperBound = new int[] { 3, 7 };
		int n = 4;
		assertEquals(6, new UnionOfIntervals().nthElement(lowerBound, upperBound, n));
	}
	
	@Test
	public void test1() {
		int[] lowerBound = new int[] { 1, 3 };
		int[] upperBound = new int[] { 4, 5 };
		int n = 3;
		assertEquals(3, new UnionOfIntervals().nthElement(lowerBound, upperBound, n));
	}
	
	@Test
	public void test2() {
		int[] lowerBound = new int[] { -1500000000 };
		int[] upperBound = new int[] { 1500000000 };
		int n = 1500000091;
		assertEquals(91, new UnionOfIntervals().nthElement(lowerBound, upperBound, n));
	}

	@Test
	public void test3() {
		int[] lowerBound = new int[] {};
		int[] upperBound = new int[] {};
		int n = 50;
		assertEquals(-1999999999, new UnionOfIntervals().nthElement(lowerBound, upperBound, n));
	}
}
